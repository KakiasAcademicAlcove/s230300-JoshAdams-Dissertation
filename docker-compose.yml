version: "3.8"

volumes:
  freeradius_config:
    driver: local
    driver_opts:
      type: none
      device: $FREERADIUS_DIR
      o: uid=root,gid=root,bind
  # logstash_config:
  #   driver: local
  #   driver_opts:
  #     type: none
  #     device: $LOGSTASH_CONFIG_DIR
  # o: uid=root,gid=root,bind
  logstash_pipelines:
    driver: local
    driver_opts:
      type: none
      device: $LOGSTASH_PIPELINE_DIR
      o: uid=root,gid=root,bind
  kafka_node_1_config:
    driver: local
    driver_opts:
      type: none
      device: $KAFKA_NODE_1_CONFIG_DIR
      o: uid=root,gid=root,bind
  kafka_node_2_config:
    driver: local
    driver_opts:
      type: none
      device: $KAFKA_NODE_2_CONFIG_DIR
      o: uid=root,gid=root,bind
  elasticsearch_config:
    driver: local
    driver_opts:
      type: none
      device: $ELASTICSEARCH_CONFIG_DIR
      o: uid=root,gid=root,bind
  kibana_config:
    driver: local
    driver_opts:
      type: none
      device: $KIBANA_CONFIG_DIR
      o: uid=root,gid=root,bind
  metricbeat_config:
    driver: local
    driver_opts:
      type: none
      device: $METRICBEAT_CONFIG_DIR
      o: uid=root,gid=root,bind
  filebeat_config:
    driver: local
    driver_opts:
      type: none
      device: $FILEBEAT_CONFIG_DIR
      o: uid=root,gid=root,bind
  apm_config:
    driver: local
    driver_opts:
      type: none
      device: $APM_CONFIG_DIR
      o: uid=root,gid=root,bind
  freeradius_logs:
  kafka-data-1:
  kafka-data-2:
  kafka-data-3:
  elasticsearch_data:

networks:
  kafka_network:
    driver: bridge
  elastic_network:
    driver: bridge

services:
  freeradius:
    build: ./freeradius
    container_name: freeradius
    volumes:
      - freeradius_logs:$FREERADIUS_LOG_DIR
      - type: bind
        source: $FREERADIUS_DIR/radiusd.conf
        target: /etc/freeradius/radiusd.conf
      - type: bind
        source: $FREERADIUS_DIR/users
        target: /etc/freeradius/users
    entrypoint: ["freeradius", "-f"]
    ports:
      - "1812:1812/udp"
      - "1813:1813/udp"
    networks:
      - "kafka_network"
    depends_on:
      - apm-server

  logstash:
    build: ./logstash
    container_name: logstash
    volumes:
      - freeradius_logs:/var/log/freeradius:ro
      # - logstash_config:/usr/share/logstash/config
    # entrypoint: ["sleep", "infinity"]
    ports:
      - "5044:5044"
    networks:
      - kafka_network
      - elastic_network
    depends_on:
      - kafka-1
      - kafka-2
      - elasticsearch

  kafka-1:
    image: apache/kafka:$KAFKA_VERSION
    container_name: kafka-1
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: controller,broker
      KAFKA_LISTENERS: 'CONTROLLER://:9093,PLAINTEXT://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka-1:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_HOURS: 72
      KAFKA_MESSAGE_MAX_BYTES: 1000012
    ports:
      - "19092:9092"
    volumes:
      - kafka-data-1:/var/lib/kafka
      # - $KAFKA_NODE_1_CONFIG_DIR/server.properties:/opt/kafka/config/server.properties
    networks:
      - kafka_network
      - elastic_network

  kafka-2:
    image: apache/kafka:$KAFKA_VERSION
    container_name: kafka-2
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: controller,broker
      KAFKA_LISTENERS: 'CONTROLLER://:9093,PLAINTEXT://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka-2:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_HOURS: 72
      KAFKA_MESSAGE_MAX_BYTES: 1000012
    ports:
      - "29092:9092"
    volumes:
      - kafka-data-2:/var/lib/kafka
      # - $KAFKA_NODE_2_CONFIG_DIR/server.properties:/opt/kafka/config/server.properties
    networks:
      - kafka_network
      - elastic_network
  
  kafka-3:
    image: apache/kafka:$KAFKA_VERSION
    container_name: kafka-3
    environment:
      KAFKA_NODE_ID: 3
      KAFKA_PROCESS_ROLES: controller,broker
      KAFKA_LISTENERS: 'CONTROLLER://:9093,PLAINTEXT://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka-3:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_HOURS: 72
      KAFKA_MESSAGE_MAX_BYTES: 1000012
    ports:
      - "39092:9092"
    volumes:
      - kafka-data-3:/var/lib/kafka
      # - $KAFKA_NODE_3_CONFIG_DIR/server.properties:/opt/kafka/config/server.properties
    networks:
      - kafka_network
      - elastic_network

  # init-kafka:
  #   image: apache/kafka:$KAFKA_VERSION
  #   container_name: init-kafka
  #   depends_on:
  #     - kafka-1
  #     - kafka-2
  #   entrypoint: [ '/bin/sh', '-c' ]
  #   command: |
  #     "
  #     # Block until Kafka is reachable
  #     ./opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka-1:19092 --list
      
  #     echo -e 'Creating Kafka topics...'
  #     ./opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka-1:19092 --create --if-not-exists --topic freeradius_auth_accept --replication-factor 1 --partitions 1
  #     ./opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka-1:19092 --create --if-not-exists --topic freeradius_auth_reject --replication-factor 1 --partitions 1
      
  #     echo -e 'Successfully created Kafka topics:'
  #     ./opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka-1:19092  --list
  #     "

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:$ELK_VERSION
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
      # - $ELASTICSEARCH_CONFIG_DIR/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    networks:
      - elastic_network
  
  kibana:
    image: docker.elastic.co/kibana/kibana:$ELK_VERSION
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    volumes:
      - $KIBANA_CONFIG_DIR/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - "5601:5601"
    networks:
      - elastic_network
    depends_on:
      - elasticsearch

  metricbeat:
    image: docker.elastic.co/beats/metricbeat:$ELK_VERSION
    container_name: metricbeat
    volumes:
      - $METRICBEAT_CONFIG_DIR/metricbeat.yml:/usr/share/metricbeat/config/metricbeat.yml
    # ports:
    networks:
      - elastic_network

  filebeat:
    image: docker.elastic.co/beats/filebeat:$ELK_VERSION
    container_name: filebeat
    volumes:
      - $FILEBEAT_CONFIG_DIR/filebeat.yml:/usr/share/filebeat/config/filebeat.yml
    # ports:
    networks:
      - elastic_network
  
  apm-server:
    image: docker.elastic.co/apm/apm-server:$ELK_VERSION
    container_name: apm-server
    volumes:
      - $APM_CONFIG_DIR/apm-server.yml:/usr/share/apm/config/apm-server.yml
    # ports:
    networks:
      - elastic_network