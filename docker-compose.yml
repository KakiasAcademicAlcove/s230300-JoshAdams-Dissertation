version: "3.8"

services:
  freeradius1:
    build: ./freeradius
    container_name: freeradius1
    volumes:
      - freeradius1_logs:/var/log/freeradius
    ports:
      - "1812:1812/udp"
      - "1813:1813/udp"

  freeradius2:
    build: ./freeradius
    container_name: freeradius2
    volumes:
      - freeradius2_logs:/var/log/freeradius
    ports:
      - "2812:1812/udp"
      - "2813:1813/udp"

  freeradius3:
    build: ./freeradius
    container_name: freeradius3
    volumes:
      - freeradius3_logs:/var/log/freeradius
    ports:
      - "3812:1812/udp"
      - "3813:1813/udp"

  logstash:
    image: logstash:8.17.3
    container_name: logstash
    volumes:
      - logstash_config:/usr/share/logstash/pipeline
      - freeradius1_logs:/var/log/freeradius1:ro
      - freeradius2_logs:/var/log/freeradius2:ro
      - freeradius3_logs:/var/log/freeradius3:ro
    ports:
      - "5044:5044"
    environment:
      - LOGSTASH_JAVA_OPTS="-Xmx1g -Xms1g"
      - xpack.monitoring.enabled=false
    networks:
      - kafka_network
      - elastic_network

  kafka-node-1:
    image: apache/kafka:latest
    container_name: kafka-node-1
    networks:
      - kafka_network
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-node-1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_LISTENER_NAMES: PLAINTEXT,CONTROLLER
      KAFKA_LISTENER_PORT: 9092
      KAFKA_LISTENER_HOST_NAME: kafka-node-1
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-node-1:9093,2@kafka-node-2:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_ZOOKEEPER_CONNECT: ""  # KRaft mode does not need ZooKeeper
      KAFKA_KRAFT_MODE: "true"  # Enable KRaft mode (no Zookeeper)
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_LOG_DIRS: /var/lib/kafka/logs
      KAFKA_LOG_RETENTION_HOURS: 168
    ports:
      - "29092:9092"
    volumes:
      - kafka-data-1:/var/lib/kafka

  kafka-node-2:
    image: apache/kafka:latest
    container_name: kafka-node-2
    networks:
      - kafka_network
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-node-2:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_LISTENER_NAMES: PLAINTEXT,CONTROLLER
      KAFKA_LISTENER_PORT: 9092
      KAFKA_LISTENER_HOST_NAME: kafka-node-2
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-node-1:9093,2@kafka-node-2:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_ZOOKEEPER_CONNECT: ""  # KRaft mode does not need ZooKeeper
      KAFKA_KRAFT_MODE: "true"  # Enable KRaft mode (no Zookeeper)
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_LOG_DIRS: /var/lib/kafka/logs
      KAFKA_LOG_RETENTION_HOURS: 168
    ports:
      - "39092:9092"
    volumes:
      - kafka-data-2:/var/lib/kafka

  elasticsearch:
    image: elasticsearch:8.17.3
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - elastic_network
  
  # kibana:
  #   image: kibana:8.17.3
  #   container_name: kibana
  #   environment:
  #     - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
  #   volumes:
  #     - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
  #   ports:
  #     - "5601:5601"
  #   networks:
  #     - elastic_network
  #   depends_on:
  #     - elasticsearch

volumes:
  freeradius1_logs:
  freeradius2_logs:
  freeradius3_logs:
  logstash_config:
  kafka-data-1:
  kafka-data-2:
  elasticsearch_config:
  elasticsearch_data:

networks:
  kafka_network:
    driver: bridge
  elastic_network:
    driver: bridge