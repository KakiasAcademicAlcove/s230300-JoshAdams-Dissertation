version: "3.8"

volumes:
  freeradius_config:
    driver: local
    driver_opts:
      type: none
      device: $FREERADIUS_CONFIG_DIR
      o: uid=root,gid=root,bind
  logstash_config:
    driver: local
    driver_opts:
      type: none
      device: $LOGSTASH_CONFIG_DIR
      o: uid=root,gid=root,bind
  logstash_pipelines:
    driver: local
    driver_opts:
      type: none
      device: $LOGSTASH_PIPELINES_DIR
      o: uid=root,gid=root,bind
  kafka_config:
    driver: local
    driver_opts:
      type: none
      device: $KAFKA_CONFIG_DIR
      o: uid=root,gid=root,bind
  elasticsearch_config:
    driver: local
    driver_opts:
      type: none
      device: $ELASTICSEARCH_CONFIG_DIR
      o: uid=root,gid=root,bind
  kibana_config:
    driver: local
    driver_opts:
      type: none
      device: $KIBANA_CONFIG_DIR
      o: uid=root,gid=root,bind
  metricbeat_config:
    driver: local
    driver_opts:
      type: none
      device: $METRICBEAT_CONFIG_DIR
      o: uid=root,gid=root,bind
  filebeat_config:
    driver: local
    driver_opts:
      type: none
      device: $FILEBEAT_CONFIG_DIR
      o: uid=root,gid=root,bind
  apm_config:
    driver: local
    driver_opts:
      type: none
      device: $APM_CONFIG_DIR
      o: uid=root,gid=root,bind
  freeradius1_logs:
  freeradius2_logs:
  freeradius3_logs:
  kafka-data-1:
  kafka-data-2:
  elasticsearch_data:

networks:
  kafka_network:
    driver: bridge
  elastic_network:
    driver: bridge

services:
  # chef:
  #   image: cincproject/workstation:24.12.1073
  #   container_name: chef
  #   volumes: 
  #     - ./chef:/chef
  #     - freeradius_config:/configs/freeradius
  #     - logstash_config:/configs/logstash
  #     - kafka_config:/configs/kafka
  #     - elasticsearch_config:/configs/elasticsearch
  #     - kibana_config:/configs/kibana
  #   entrypoint: ["/bin/sh", "-c", "chef-client --local-mode --config /chef/knife.rb --override-runlist 'recipe[freeradius]' &&
  #                                  chef-client --local-mode --config /chef/knife.rb --override-runlist 'recipe[logstash]' &&
  #                                  chef-client --local-mode --config /chef/knife.rb --override-runlist 'recipe[kafka]' &&
  #                                  chef-client --local-mode --config /chef/knife.rb --override-runlist 'recipe[elasticsearch]' &&
  #                                  chef-client --local-mode --config /chef/knife.rb --override-runlist 'recipe[kafka]'
  #               "]

  freeradius1:
    image: freeradius/freeradius-server:$FREERADIUS_TAG
    container_name: freeradius1
    volumes:
      - freeradius1_logs:/var/log/freeradius
      - ./freeradius/radiusd.conf
      - ./freeradius/users
    entrypoint: ["freeradius", "-f"]
    ports:
      - "1812:1812/udp"
      - "1813:1813/udp"
    networks:
      - "kafka_network"
    depends_on:
      - "apm-server"

  freeradius2:
    image: freeradius/freeradius-server:$FREERADIUS_TAG
    container_name: freeradius2
    volumes:
      - freeradius2_logs:/var/log/freeradius
      # - freeradius_config:/etc/freeradius
    entrypoint: ["freeradius", "-f"]
    ports:
      - "2812:1812/udp"
      - "2813:1813/udp"
    networks:
      - "kafka_network"
    depends_on:
      - "apm-server"

  freeradius3:
    image: freeradius/freeradius-server:$FREERADIUS_TAG
    container_name: freeradius3
    volumes:
      - freeradius3_logs:/var/log/freeradius
      # - freeradius_config:/etc/freeradius
    entrypoint: ["freeradius", "-f"]
    ports:
      - "3812:1812/udp"
      - "3813:1813/udp"
    networks:
      - "kafka_network"
    depends_on:
      - "apm-server"

  logstash:
    image: docker.elastic.co/logstash/logstash:$ELK_VERSION
    container_name: logstash
    volumes:
      - freeradius1_logs:/var/log/freeradius1:ro
      - freeradius2_logs:/var/log/freeradius2:ro
      - freeradius3_logs:/var/log/freeradius3:ro
      - ./logstash/config:/usr/share/logstash/config
      - ./logstash/pipeline:/usr/share/pipeline
    ports:
      - "5044:5044"
    networks:
      - kafka_network
      - elastic_network
    depends_on:
      - kafka-1
      - kafka-2
      - elasticsearch

  kafka-1:
    build: ./kafka
    container_name: kafka-1
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: controller,broker
      KAFKA_LISTENERS: 'CONTROLLER://:9093,PLAINTEXT://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka-1:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-1:9093,2@kafka-2:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
    ports:
      - "19092:9092"
    volumes:
      - kafka-data-1:/var/lib/kafka
      - ./kafka/node-2/server.properties:/opt/kafka/config/server.properties
    networks:
      - kafka_network
      - elastic_network

  kafka-2:
    build: ./kafka
    container_name: kafka-2
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: controller,broker
      KAFKA_LISTENERS: 'CONTROLLER://:9093,PLAINTEXT://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka-2:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-1:9093,2@kafka-2:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
    ports:
      - "29092:9092"
    volumes:
      - kafka-data-2:/var/lib/kafka
      - ./kafka/node-2/server.properties:/opt/kafka/config/server.properties
    networks:
      - kafka_network
      - elastic_network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:$ELK_VERSION
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
      - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    networks:
      - elastic_network
  
  kibana:
    image: docker.elastic.co/kibana/kibana:$ELK_VERSION:$ELK_VERSION
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    volumes:
      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - "5601:5601"
    networks:
      - elastic_network
    depends_on:
      - elasticsearch

  metricbeat:
    image: docker.elastic.co/metricbeat/metricbeat:$ELK_VERSION
    container_name: metricbeat
    environment:
    volumes:
      ./metricbeat.yml:/usr/share/metricbeat/config/metricbeat.yml
    ports:
    networks:
      - elastic_network

  filebeat:
    image: docker.elastic.co/filebeat/filebeat:$ELK_VERSION
    container_name: filebeat
    environment:
    volumes:
      ./filebeat.yml:/usr/share/filebeat/config/filebeat.yml
    ports:
    networks:
      - elastic_network
  
  apm-server:
    image: docker.elastic.co/apm/apm-server:$ELK_VERSION
    container_name: apm-server
    environment:
    volumes:
    ports:
    networks:
      - elastic_network