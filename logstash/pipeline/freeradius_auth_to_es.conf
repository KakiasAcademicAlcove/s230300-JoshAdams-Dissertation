input {
  kafka {
    bootstrap_servers => "kafka-1:9092,kafka-2:9092,kafka-3:9092"
    topics => ["freeradius_auth_accept","freeradius_auth_reject"]
    codec => "plain"
  }
}

filter {
  mutate {
    copy => { "event.original" => "message" }
  }

  grok {
    match => {
      "message" => [
        # Match ACCEPT logs
        "^%{WORD:day_of_week} %{MONTH:month} %{DAY:day} %{TIME:time} %{YEAR:year} : Auth: \(%{NUMBER:auth_id}\) Login OK: \[%{USERNAME:user}\] \(from client %{HOSTNAME:client} port %{NUMBER:port}\)$",

        # Match REJECT logs
        "^%{WORD:day_of_week} %{MONTH:month} %{DAY:day} %{TIME:time} %{YEAR:year} : Auth: \(%{NUMBER:auth_id}\) Login incorrect \(%{DATA:reason}\): \[%{USERNAME:user}\] \(from client %{HOSTNAME:client} port %{NUMBER:port}\)$"
      ]
    }
  }

  mutate {
    remove_field => ["day_of_week"]
    add_field => {
      "timestamp" => "%{month} %{day} %{time} %{year}"
    }
  }

  ruby {
    code => 'event.set("timestamp", event.sprintf("%{timestamp}"))'
  }

  date {
    match => ["timestamp", "MMM dd HH:mm:ss yyyy"]
    target => "@timestamp"
    timezone => "UTC"
  }

  mutate {
    add_field => {
      "request-type" => "Auth"
    }
    remove_field => ["message"]
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "auth-logs-%{+YYYY.MM.dd}"
    document_id => "%{auth_id}-%{user}-%{client}-%{port}-%{@timestamp}"
  }
}
